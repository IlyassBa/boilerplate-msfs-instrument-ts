{"version":3,"file":"SpeedInteractor.js","sourceRoot":"","sources":["SpeedInteractor.ts"],"names":[],"mappings":"AAEA,MAAM,OAAO,eAAe;IAMxB,YAAY,IAAe,EAAE,KAAsB;QAC/C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IAED,QAAQ;QACJ,IAAG,CAAC,MAAM,CAAC,cAAc,CAAC,oBAAoB,EAAE,IAAI,CAAC,IAAI,CAAC;YAAE,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;QAEpG,OAAO,MAAM,CAAC,cAAc,CAAC,oBAAoB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAClE,CAAC;IAGD,gBAAgB;QACZ,OAAO,GAAG,IAAI,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;IAC7C,CAAC;CACJ","sourcesContent":["import { SimVarSpeedType, SpeedUnit, Speed} from \"../entity/Speed\";\r\n\r\nexport class SpeedInteractor implements Speed {\r\n\r\n    public unit: SpeedUnit;\r\n    public speed: SimVarSpeedType;\r\n\r\n\r\n    constructor(unit: SpeedUnit, speed: SimVarSpeedType) {\r\n        this.unit = unit;\r\n        this.speed = speed;\r\n    }\r\n\r\n    getSpeed(): number {\r\n        if(!SimVar.GetSimVarValue(\"AIRSPEED INDICATED\", this.unit)) throw new Error(\"SimVar not available\");\r\n\r\n        return SimVar.GetSimVarValue(\"AIRSPEED INDICATED\", this.unit);\r\n    }\r\n    \r\n\r\n    getSpeedWithUnit(): string {\r\n        return `${this.getSpeed()} ${this.unit}`;\r\n    }\r\n}\r\n"]}